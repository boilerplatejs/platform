version: '3.5'

services:
  boilerplatejs_host:
    image: vitruviantech/boilerplatejs:${VERSION:-latest}
    restart: unless-stopped
    depends_on:
      - boilerplatejs_data
    volumes:
      # Environment
      - ./.env:/app/.env
      - ./.ssh:/app/.ssh
      # Logs
      - ./log:/app/log
      # Dependencies
      - /app/node_modules
      - /app/.npm
      # Bundle Syncing
      - /app/.git
      # Development Bundles
      - ${MNT0:-.mnt}:/mnt/0
      - ${MNT1:-.mnt}:/mnt/1
      - ${MNT2:-.mnt}:/mnt/2
      - ${MNT3:-.mnt}:/mnt/3
      - ${MNT4:-.mnt}:/mnt/4
      - ${MNT5:-.mnt}:/mnt/5
      - ${MNT6:-.mnt}:/mnt/6
      - ${MNT7:-.mnt}:/mnt/7
      - ${MNT8:-.mnt}:/mnt/8
      - ${MNT9:-.mnt}:/mnt/9
    env_file:
      - .env
    environment:
      CONTAINER: 1
      LOG_LEVEL: ${LOG_LEVEL:-error}
      DB_HOST: ${DB_HOST:-boilerplatejs_data}
      VIRTUAL_HOST: ${DOMAIN:-}
      LETSENCRYPT_HOST: ${DOMAIN:-}
      LETSENCRYPT_EMAIL: ${EMAIL:-}
    logging:
      options:
        max-size: ${LOGGING_OPTIONS_MAX_SIZE:-200k}
    ports:
      - "${IP:-0.0.0.0}:${PORT:-8080}:${PORT:-8080}"
      - "${IP:-0.0.0.0}:${PORT_BDS:-8081}:${PORT_BDS:-8081}"
      - "${IP:-0.0.0.0}:${PORT_WDS:-8082}:${PORT_WDS:-8082}"
    networks:
      boilerplatejs:
        aliases:
          - boilerplatejs_host

  boilerplatejs_data:
    image: mariadb
    restart: unless-stopped
    volumes:
      - /var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      MYSQL_USER: ${DB_USER:-boilerplate}
      MYSQL_PASSWORD: ${DB_PASSWORD:-root}
    logging:
      options:
        max-size: ${LOGGING_OPTIONS_MAX_SIZE:-200k}
    ports:
      - "${DB_PORT_EXTERNAL:-3306}:3306"
    networks:
      boilerplatejs:
        aliases:
          - boilerplatejs_data

  boilerplatejs_admin:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    depends_on:
      - boilerplatejs_data
    environment:
      PMA_PORT: ${DB_PORT:-3306}
      PMA_HOST: ${DB_HOST:-boilerplatejs_data}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      MYSQL_USER: ${DB_USER:-boilerplate}
      MYSQL_PASSWORD: ${DB_PASSWORD:-root}
    logging:
      options:
        max-size: ${LOGGING_OPTIONS_MAX_SIZE:-200k}
    ports:
      - "${PORT_ADMIN:-8083}:80"
    networks:
      boilerplatejs:
        aliases:
          - boilerplatejs_admin

  boilerplatejs_ssl:
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.9.1
    restart: always
    volumes:
      - ${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock:ro
      - /etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /etc/nginx/certs
    environment:
      NGINX_PROXY_CONTAINER: boilerplatejs_http
      NGINX_DOCKER_GEN_CONTAINER: boilerplatejs_docker_gen
    logging:
      driver: ${SSL_LOG_DRIVER:-json-file}
      options:
        max-size: ${LOGGING_OPTIONS_MAX_SIZE:-2m}
        max-file: ${LOGGING_OPTIONS_MAX_FILE:-10}

  boilerplatejs_http:
    image: nginx
    container_name: boilerplatejs_http
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    restart: always
    ports:
      - "${IP:-0.0.0.0}:${HTTP_PORT:-80}:80"
      - "${IP:-0.0.0.0}:${HTTP_PORT:-443}:443"
    volumes:
      - /etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /etc/nginx/certs
      - /etc/nginx/htpasswd
    logging:
      driver: ${HTTP_LOG_DRIVER:-json-file}
      options:
        max-size: ${LOGGING_OPTIONS_MAX_SIZE:-4m}
        max-file: ${LOGGING_OPTIONS_MAX_FILE:-10}

  boilerplatejs_docker_gen:
    image: jwilder/docker-gen:0.7.3
    container_name: boilerplatejs_docker_gen
    command: -notify-sighup boilerplatejs_http -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    restart: always
    volumes:
      - ./config/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - ${DOCKER_SOCK:-/var/run/docker.sock}:/tmp/docker.sock:ro
      - /etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /etc/nginx/certs
      - /etc/nginx/htpasswd
    logging:
      driver: ${DOCKER_GEN_LOG_DRIVER:-json-file}
      options:
        max-size: ${LOGGING_OPTIONS_MAX_SIZE:-2m}
        max-file: ${LOGGING_OPTIONS_MAX_FILE:-10}

networks:
  boilerplatejs: